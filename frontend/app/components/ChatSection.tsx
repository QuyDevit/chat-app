import React, { useState, useEffect } from "react";

export default function ChatSection() {
  const [currentChannel, setCurrentChannel] = useState("general");
  const [messages, setMessages] = useState<any[]>([]);

  const channelData = {
    general: {
      title: "# T·ªïng Qu√°t",
      description: "Th·∫£o lu·∫≠n chung v·ªÅ Delta Force v√† GameBuddy",
      placeholder: "Nh·∫≠p tin nh·∫Øn v√†o #t·ªïng-qu√°t..."
    },
    tactics: {
      title: "# Chi·∫øn Thu·∫≠t",
      description: "Chia s·∫ª chi·∫øn thu·∫≠t v√† k·ªπ nƒÉng ch∆°i game",
      placeholder: "Nh·∫≠p tin nh·∫Øn v√†o #chi·∫øn-thu·∫≠t..."
    },
    recruitment: {
      title: "# Tuy·ªÉn Th√†nh Vi√™n",
      description: "T√¨m ki·∫øm v√† tuy·ªÉn th√†nh vi√™n cho ƒë·ªôi h√¨nh",
      placeholder: "Nh·∫≠p tin nh·∫Øn v√†o #tuy·ªÉn-th√†nh-vi√™n..."
    },
    help: {
      title: "# H·ªó Tr·ª£",
      description: "Nh·∫≠n h·ªó tr·ª£ v√† gi·∫£i ƒë√°p th·∫Øc m·∫Øc",
      placeholder: "Nh·∫≠p tin nh·∫Øn v√†o #h·ªó-tr·ª£..."
    }
  };

  const switchChannel = (channelId: string) => {
    setCurrentChannel(channelId);
    setMessages([]);
  };

  const sendMessage = (event: React.FormEvent) => {
    event.preventDefault();
    const form = event.target as HTMLFormElement;
    const input = form.querySelector("input") as HTMLInputElement;
    const message = input.value.trim();

    if (!message) return;

    const currentTime = new Date().toLocaleTimeString("vi-VN", {
      hour: "2-digit",
      minute: "2-digit"
    });

    const newMessage = {
      id: Date.now(),
      user: "B·∫°n",
      avatar: "B",
      content: message,
      time: currentTime,
      color: "text-green-400",
      bgColor: "from-green-500 to-blue-500"
    };

    setMessages((prev) => [...prev, newMessage]);
    input.value = "";

    // Simulate response
    setTimeout(
      () => {
        const responses = [
          "Hay qu√°! T√¥i c≈©ng ƒëang t√¨m ƒë·ªìng ƒë·ªôi.",
          "C√≥ ai online kh√¥ng? C·∫ßn h·ªó tr·ª£ v·ªõi mission n√†y.",
          "GG! Tr·∫≠n v·ª´a r·ªìi ch∆°i tuy·ªát v·ªùi.",
          "Ai bi·∫øt c√°ch unlock weapon m·ªõi kh√¥ng?",
          "Squad t√¥i ƒëang thi·∫øu 1 ng∆∞·ªùi, ai join kh√¥ng?"
        ];

        const randomResponse = responses[Math.floor(Math.random() * responses.length)];
        const responseMessage = {
          id: Date.now() + 1,
          user: "GamerFriend",
          avatar: "G",
          content: randomResponse,
          time: currentTime,
          color: "text-purple-400",
          bgColor: "from-purple-500 to-pink-500"
        };

        setMessages((prev) => [...prev, responseMessage]);
      },
      1000 + Math.random() * 2000
    );
  };

  return (
    <section id="chat" className="section-content pt-16">
      <div className="max-w-7xl mx-auto px-4 py-12">
        <h2 className="font-bold text-4xl text-center mb-12">Tin Nh·∫Øn C·ªông ƒê·ªìng</h2>

        <div className="grid grid-cols-1 lg:grid-cols-4 gap-6 min-h-[600px]">
          {/* Chat Sidebar */}
          <div className="lg:col-span-1">
            <div className="bg-slate-800/50 rounded-xl border border-slate-700 h-full flex flex-col">
              <div className="p-4 border-b border-slate-700">
                <h3 className="font-bold text-lg text-green-400">K√™nh Chat</h3>
              </div>

              <div className="flex-1 overflow-y-auto p-4">
                <div className="space-y-2">
                  <button
                    onClick={() => switchChannel("general")}
                    className={`w-full text-left px-3 py-2 rounded-lg hover:bg-slate-700 hover:cursor-pointer transition-colors ${currentChannel === "general" ? "bg-slate-700" : ""}`}
                  >
                    <div className="flex items-center space-x-2">
                      <span className="text-green-400">#</span>
                      <span>T·ªïng Qu√°t</span>
                      <span className="ml-auto bg-green-600 text-xs px-2 py-1 rounded-full">247</span>
                    </div>
                  </button>

                  <button
                    onClick={() => switchChannel("tactics")}
                    className={`w-full text-left px-3 py-2 rounded-lg hover:bg-slate-700 hover:cursor-pointer transition-colors ${currentChannel === "tactics" ? "bg-slate-700" : ""}`}
                  >
                    <div className="flex items-center space-x-2">
                      <span className="text-blue-400">#</span>
                      <span>Chi·∫øn Thu·∫≠t</span>
                      <span className="ml-auto bg-slate-600 text-xs px-2 py-1 rounded-full">89</span>
                    </div>
                  </button>

                  <button
                    onClick={() => switchChannel("recruitment")}
                    className={`w-full text-left px-3 py-2 rounded-lg hover:bg-slate-700 hover:cursor-pointer transition-colors ${currentChannel === "recruitment" ? "bg-slate-700" : ""}`}
                  >
                    <div className="flex items-center space-x-2">
                      <span className="text-orange-400">#</span>
                      <span>Tuy·ªÉn Th√†nh Vi√™n</span>
                      <span className="ml-auto bg-slate-600 text-xs px-2 py-1 rounded-full">156</span>
                    </div>
                  </button>

                  <button
                    onClick={() => switchChannel("help")}
                    className={`w-full text-left px-3 py-2 rounded-lg hover:bg-slate-700 hover:cursor-pointer transition-colors ${currentChannel === "help" ? "bg-slate-700" : ""}`}
                  >
                    <div className="flex items-center space-x-2">
                      <span className="text-purple-400">#</span>
                      <span>H·ªó Tr·ª£</span>
                      <span className="ml-auto bg-slate-600 text-xs px-2 py-1 rounded-full">34</span>
                    </div>
                  </button>
                </div>
              </div>

              <div className="p-4 border-t border-slate-700">
                <div className="text-sm text-slate-400">
                  <div className="flex items-center space-x-2 mb-2">
                    <div className="w-2 h-2 bg-green-400 rounded-full"></div>
                    <span>1,247 ng∆∞·ªùi online</span>
                  </div>
                  <div className="flex items-center space-x-2">
                    <div className="w-2 h-2 bg-slate-500 rounded-full"></div>
                    <span>3,891 th√†nh vi√™n</span>
                  </div>
                </div>
              </div>
            </div>
          </div>

          {/* Chat Main Area */}
          <div className="lg:col-span-3">
            <div className="bg-slate-800/50 rounded-xl border border-slate-700 h-full flex flex-col">
              {/* Chat Header */}
              <div className="p-4 border-b border-slate-700">
                <div className="flex items-center justify-between">
                  <div>
                    <h3 className="font-semibold text-lg">
                      {channelData[currentChannel as keyof typeof channelData].title}
                    </h3>
                    <p className="text-sm text-slate-400">
                      {channelData[currentChannel as keyof typeof channelData].description}
                    </p>
                  </div>
                  <div className="flex items-center space-x-2">
                    <button
                      className="p-2 hover:bg-slate-700 rounded-lg transition-colors hover:cursor-pointer"
                      title="T√¨m ki·∫øm"
                    >
                      üîç
                    </button>
                    <button
                      className="p-2 hover:bg-slate-700 rounded-lg transition-colors hover:cursor-pointers"
                      title="Th√¥ng b√°o"
                    >
                      üîî
                    </button>
                  </div>
                </div>
              </div>

              {/* Chat Messages */}
              <div className="flex-1 overflow-y-auto p-4">
                {messages.length === 0 ? (
                  <div className="text-center text-slate-400 py-8">
                    <div className="text-4xl mb-4">üí¨</div>
                    <p>Ch√†o m·ª´ng ƒë·∫øn v·ªõi {channelData[currentChannel as keyof typeof channelData].title}</p>
                    <p className="text-sm">{channelData[currentChannel as keyof typeof channelData].description}</p>
                  </div>
                ) : (
                  <div className="space-y-4">
                    {messages.map((message) => (
                      <div key={message.id} className="flex items-start space-x-3">
                        <div
                          className={`w-10 h-10 bg-gradient-to-br ${message.bgColor} rounded-full flex items-center justify-center text-sm font-bold`}
                        >
                          {message.avatar}
                        </div>
                        <div className="flex-1">
                          <div className="flex items-center space-x-2 mb-1">
                            <span className={`font-semibold ${message.color}`}>{message.user}</span>
                            <span className="text-xs text-slate-500">H√¥m nay l√∫c {message.time}</span>
                          </div>
                          <p className="text-slate-300">{message.content}</p>
                        </div>
                      </div>
                    ))}
                  </div>
                )}
              </div>

              {/* Chat Input */}
              <div className="p-4 border-t border-slate-700">
                <form onSubmit={sendMessage} className="flex space-x-3">
                  <input
                    type="text"
                    placeholder={channelData[currentChannel as keyof typeof channelData].placeholder}
                    className="flex-1 bg-slate-700 border border-slate-600 rounded-lg px-4 py-3 text-white placeholder-slate-400 focus:outline-none focus:border-green-500 transition-colors"
                  />
                  <button
                    type="submit"
                    className="bg-green-600 px-6 py-3 rounded-lg font-semibold hover:scale-105 transition-transform hover:cursor-pointer"
                  >
                    G·ª≠i
                  </button>
                </form>
                <div className="flex items-center justify-between mt-2 text-xs text-slate-500">
                  <span>Nh·∫•n Enter ƒë·ªÉ g·ª≠i tin nh·∫Øn</span>
                  <span>Shift + Enter ƒë·ªÉ xu·ªëng d√≤ng</span>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </section>
  );
}
